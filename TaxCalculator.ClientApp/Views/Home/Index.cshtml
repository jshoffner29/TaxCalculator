@{
    ViewData["Title"] = "Tax Service";
}

@model TaxServiceViewModel

<div class="text-center">
    <div>
        <div class="row">
            <div class="col-9 tax-service-title">
                <div class="second-level">
                    <div class="third-level">
                        <h1 class="display-4">Tax Service</h1>
                    </div>
                </div>
            </div>
        </div>
        @if (string.IsNullOrEmpty(Model.StateCodeSelected))
        {
            <div class="tax-service-welcome">
                <div class="second-level">
                    <div class="third-level">
                        <span>@Model.SectionAppInstructions</span>
                    </div>
                </div>
            </div>
        }
    </div>

    <!-- Select a State -->
    @using (Html.BeginForm("StateSelected", "Home", FormMethod.Post))
    {
        <div class="row">
            <div class="col-4 tax-service-instructions-section">
                <p>@Model.SectionStateInstructions</p>
            </div>
            <div class="col-8 state-select-container">
                @Html.DropDownListFor(m => m.StateCodeSelected, Model.GetViewList<USStateModel>(), " -- Please select a state -- ")
                <input type="submit" value="Search States" />
            </div>
        </div>

    }

    <!-- Show Zip Codes for state -->
    @if (Model.USSlocations != null && Model.USSlocations.Any())
    {
        // No ZipCode has been selected
        @if (string.IsNullOrEmpty(Model.ZipCodeSelected))
        {
            @using (Html.BeginForm("ZipCodeFiltering", "Home", FormMethod.Post))
            {
                @Html.DropDownListFor(m => m.FilteredCityNameSelected, Model.GetViewList<USLocationModel>("FilteredCityNameSelected"), " -- Filter on city name -- ")
                @Html.DropDownListFor(m => m.FilteredZipCodeSelected, Model.GetViewList<USLocationModel>("FilteredZipCodeSelected"), " -- Filter on zip code -- ")
                <input type="submit" value="Search" />
                <input type="submit" name="clear" value="Clear" />
            }

            @using (Html.BeginForm("ZipCodeSelected", "Home", FormMethod.Post))
            {
                <div class="row zip-code-container">
                    @foreach (var location in Model.FilteredUSSLocations)
                    {
                        <div class="col-md-3 section">
                            <div>@location.City</div>
                            <input class="btn-primary" type="submit" name="zipCode" value="@location.ZipCode" />
                            <div><a href="https://www.google.com/maps?q=@location.Lat,@location.Lng" target="_blank">View In Map</a></div>
                        </div>
                    }

                </div>
            }
        }
        else // ZipCode has been selected
        {
            <hr />
            @using (Html.BeginForm("TaxRateForLocation", "Home", FormMethod.Post))
            {
                <div class="row">
                    <div class="col-4 tax-service-instructions-section">
                        <div class="freeze-instructions-height">
                            <p>@Model.SectionTaxForLocationInstructions</p>
                        </div>
                    </div>
                    <div class="col-8">
                        <label>Street Address</label>
                        @Html.TextBoxFor(m => m.StreetSelected, new { @PlaceHolder = "Enter Street Address" }),
                        @Model.ZipCodeSelected

                        <div>
                            <input type="submit" name="submit" value="View Tax Rate" /> @*Get tax rate*@
                            <input type="submit" name="clear" value="View Zip Codes" /> @*Clear zip code, allow view zip code list*@
                        </div>
                        @if (Model.TaxRateForLocation != -1)
                        {
                            <p><div>The tax for zip code @Model.ZipCodeSelected is: @Model.TaxRateForLocation.ToString("P")</div></p>
                        }
                    </div>
                </div>
            }
            <hr />
        }

    }

    <!-- Order Items -->
    @if (!string.IsNullOrEmpty(Model.ZipCodeSelected))
    {
        @using (Html.BeginForm("OrderItemSelected", "Home", FormMethod.Post))
        {
            <div class="order-container">
                <div class="row">
                    <div class="col-4">
                        <span>@Model.SectionOrderInstructions</span>
                    </div>
                    <div class="col-8">
                        <span class="title">Order Form:</span>
                        <div class="row order-items-container">
                            @{int i = 0;}
                            @foreach (var item in @Model.OrderItems)
                            {
                                <div class="order-items-container-row col-6">
                                    <div>
                                        <label>Name:</label>
                                        <span title="@item.Name">@Model.GetShortText(item.Name, 25)</span>
                                    </div>
                                    <div>
                                        <label>Description:</label>
                                        <span title="@item.Description">@Model.GetShortText(item.Description, 25)</span>
                                    </div>
                                    <div>
                                        <label>Tax Code:</label>
                                        <span>@item.ProductTaxCode</span>
                                    </div>
                                    <div>
                                        <label>Quantity:</label>
                                        <span>@item.Quantity</span>
                                    </div>
                                    <div>
                                        <label>Price:</label>
                                        <span>@item.UnitPrice.GetValueOrDefault().ToString("C")</span>
                                    </div>
                                    <div>
                                        <label>Total Price:</label>
                                        <span title="Quantity * Price">@Math.Round(item.Quantity.GetValueOrDefault() * item.UnitPrice.GetValueOrDefault(), 2).ToString("C")</span>
                                    </div>
                                    <button type="submit" name="removeIndex" value="@(i++)" title="Delete Item">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash" viewBox="0 0 16 16">
                                            <path d="M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z" />
                                            <path fill-rule="evenodd" d="M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z" />
                                        </svg>
                                    </button>
                                </div>
                            }
                        <div class="order-form col-6">
                            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                            <div class="title">
                                <span>Add Order Item</span>
                            </div>
                            <div>
                                @Html.DropDownListFor(m => m.OrderItemSelected.ProductTaxCode, Model.GetViewList<CategoryModel>(), " -- Category Item -- ", new { @Title = "Tooltip here" })
                                <div>
                                    <span asp-validation-for="@Model.OrderItemSelected.ProductTaxCode" class="text-danger"></span>
                                </div>
                            </div>

                            <div>
                                @Html.LabelForModel("Quantity")
                                @Html.TextBoxFor(m => m.OrderItemSelected.Quantity, new { @Text = "> 0" })
                                <div>
                                    <span asp-validation-for="@Model.OrderItemSelected.Quantity" class="text-danger"></span>
                                </div>
                            </div>
                            <div>
                                @Html.LabelForModel("Price")
                                @Html.TextBoxFor(m => m.OrderItemSelected.UnitPrice, new { @class = "required numeric", id = "OrderItemSelected", Value = String.Format("{0:C}", Model.OrderItemSelected) })
                                @*@Html.TextBoxFor(m => m.OrderItemSelected.UnitPrice)*@
                                <div>
                                    <span asp-validation-for="@Model.OrderItemSelected.UnitPrice" class="text-danger"></span>
                                </div>
                            </div>


                            <input type="submit" name="add" value="Add Item" />
                        </div>
                        </div>
                        <div class="submit-section">
                            @if (Model.OrderTaxAmount != -1)
                            {
                                <div>
                                    <label>Total Tax Amount for this @Model.OrderItems.Sum(s => s.Quantity.GetValueOrDefault() * s.UnitPrice.GetValueOrDefault()).ToString("C") Order is:</label>
                                    <span>@Model.OrderTaxAmount.ToString("C")</span>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        }
    }
</div>